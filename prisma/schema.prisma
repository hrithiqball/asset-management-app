generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset {
  uid                               String          @id
  name                              String
  description                       String?
  type                              String?
  created_by                        String
  created_on                        DateTime
  updated_by                        String
  last_maintenance                  DateTime?
  last_maintainee                   String[]
  location                          String?
  next_maintenance                  DateTime?
  status_uid                        String?
  updated_on                        DateTime
  person_in_charge                  String?
  user_asset_created_byTouser       User            @relation("asset_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  user_asset_person_in_chargeTouser User?           @relation("asset_person_in_chargeTouser", fields: [person_in_charge], references: [id], onDelete: Cascade)
  asset_status                      asset_status?   @relation(fields: [status_uid], references: [uid], onDelete: Cascade)
  asset_type                        asset_type?     @relation(fields: [type], references: [uid], onDelete: Cascade)
  user_asset_updated_byTouser       User            @relation("asset_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)
  asset_tags                        asset_tags[]
  checklist_use                     checklist_use[]
  maintenance                       maintenance[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_status {
  uid   String  @id
  title String
  color String?
  asset asset[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_tags {
  uid                    String             @id
  title                  String
  color                  String?
  asset_uid              String
  asset_tags_library_uid String
  asset_tags_library     asset_tags_library @relation(fields: [asset_tags_library_uid], references: [uid], onDelete: Cascade)
  asset                  asset              @relation(fields: [asset_uid], references: [uid], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_tags_library {
  uid                                      String       @id
  title                                    String
  color                                    String?
  created_on                               DateTime
  updated_on                               DateTime
  created_by                               String
  updated_by                               String
  asset_tags                               asset_tags[]
  user_asset_tags_library_created_byTouser User         @relation("asset_tags_library_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  user_asset_tags_library_updated_byTouser User         @relation("asset_tags_library_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_type {
  uid                              String   @id
  created_on                       DateTime
  created_by                       String
  updated_on                       DateTime
  updated_by                       String
  title                            String
  description                      String?
  icon                             String?
  asset                            asset[]
  user_asset_type_created_byTouser User     @relation("asset_type_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  user_asset_type_updated_byTouser User     @relation("asset_type_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model checklist {
  uid                             String      @id
  created_on                      DateTime
  created_by                      String
  updated_on                      DateTime
  updated_by                      String
  title                           String
  description                     String?
  color                           String?
  icon                            String?
  maintenance_uid                 String
  user_checklist_created_byTouser User        @relation("checklist_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  maintenance                     maintenance @relation(fields: [maintenance_uid], references: [uid], onDelete: Cascade)
  user_checklist_updated_byTouser User        @relation("checklist_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)
  task                            task[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model checklist_library {
  uid                                     String          @id
  created_on                              DateTime
  created_by                              String
  updated_on                              DateTime
  updated_by                              String
  title                                   String
  description                             String?
  color                                   String?
  icon                                    String?
  user_checklist_library_created_byTouser User            @relation("checklist_library_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  user_checklist_library_updated_byTouser User            @relation("checklist_library_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)
  checklist_use                           checklist_use[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model checklist_use {
  uid                                 String             @id
  created_on                          DateTime?
  created_by                          String?
  updated_on                          DateTime?
  updated_by                          String?
  title                               String
  description                         String?
  color                               String?
  icon                                String?
  checklist_library_uid               String?
  asset_uid                           String
  asset                               asset              @relation(fields: [asset_uid], references: [uid], onDelete: Cascade)
  checklist_library                   checklist_library? @relation(fields: [checklist_library_uid], references: [uid], onDelete: Cascade)
  user_checklist_use_created_byTouser User?              @relation("checklist_use_created_byTouser", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_checklist_use_updated_byTouser User?              @relation("checklist_use_updated_byTouser", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task_use                            task_use[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model history {
  uid                   String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_on            DateTime
  activity              String
  action_by             String
  action_on             DateTime
  task_uid              String?
  subtask_uid           String?
  maintenance_uid       String?
  asset_uid             String?
  subtask_use_uid       String?
  task_use              String?
  checklist_use         String?
  subtask_library_uid   String?
  task_library_uid      String?
  checklist_library_uid String?
  asset_tags_library    String?
  asset_type_uid        String?
  asset_tags_uid        String?
  user_uid              String?
  user                  User     @relation(fields: [action_by], references: [id])

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model maintenance {
  uid             String      @id
  asset_uid       String
  date            DateTime
  maintainee      String?
  attachment_path String?
  approved_by     String?
  approved_on     DateTime?
  checklist       checklist[]
  asset           asset       @relation(fields: [asset_uid], references: [uid], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subtask {
  uid             String    @id
  task_activity   String
  description     String?
  is_complete     Boolean   @default(false)
  remarks         String?
  issue           String?
  deadline        DateTime?
  completed_by    String?
  task_uid        String
  task_order      Int       @db.SmallInt
  task_type       TaskType? @default(choice)
  list_choice     String[]  @default([])
  task_number_val Int?      @db.SmallInt
  task_check      Boolean?
  task_selected   String[]
  task_bool       Boolean?  @default(false)
  task            task      @relation(fields: [task_uid], references: [uid], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subtask_library {
  uid                                   String        @id
  task_activity                         String
  description                           String?
  task_order                            BigInt
  created_on                            DateTime
  created_by                            String
  updated_on                            DateTime
  updated_by                            String
  user_subtask_library_created_byTouser User          @relation("subtask_library_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  user_subtask_library_updated_byTouser User          @relation("subtask_library_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)
  subtask_use                           subtask_use[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subtask_use {
  uid                 String           @id
  task_activity       String
  description         String?
  task_use_uid        String
  task_order          Int              @db.SmallInt
  subtask_library_uid String?
  subtask_library     subtask_library? @relation(fields: [subtask_library_uid], references: [uid], onDelete: Cascade)
  task_use            task_use         @relation(fields: [task_use_uid], references: [uid], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task {
  uid             String    @id(map: "task2_pkey")
  task_activity   String?
  description     String?
  is_complete     Boolean   @default(false)
  remarks         String?
  issue           String?
  deadline        DateTime?
  completed_by    String?
  task_order      Int       @db.SmallInt
  have_subtask    Boolean   @default(false)
  checklist_uid   String
  task_type       TaskType  @default(check)
  list_choice     String[]  @default([])
  task_bool       Boolean?
  task_selected   String[]  @default([])
  task_number_val Int?      @db.SmallInt
  task_check      Boolean?  @default(false)
  subtask         subtask[]
  checklist       checklist @relation(fields: [checklist_uid], references: [uid], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_library {
  uid                                String     @id
  created_on                         DateTime
  created_by                         String
  updated_by                         String
  updated_on                         DateTime
  task_activity                      String
  description                        String?
  have_subtask                       Boolean
  task_order                         BigInt
  user_task_library_created_byTouser User       @relation("task_library_created_byTouser", fields: [created_by], references: [id], onDelete: Cascade)
  user_task_library_updated_byTouser User       @relation("task_library_updated_byTouser", fields: [updated_by], references: [id], onDelete: Cascade)
  task_use                           task_use[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_use {
  uid               String        @id
  task_activity     String
  description       String?
  task_order        Int           @db.SmallInt
  have_subtask      Boolean       @default(false)
  checklist_use_uid String
  task_library_uid  String?
  subtask_use       subtask_use[]
  checklist_use     checklist_use @relation(fields: [checklist_use_uid], references: [uid], onDelete: Cascade)
  task_library      task_library? @relation(fields: [task_library_uid], references: [uid], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model account {
  id                   String    @id
  user_id              String
  provider_type        String
  provider_id          String
  provider_account_id  String
  refresh_token        String?
  access_token         String?
  access_token_expires DateTime?
  created_at           DateTime
  updated_at           DateTime?
  user                 User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model session {
  id            String   @id
  user_id       String
  expires       DateTime
  session_token String   @unique
  access_token  String   @unique
  created_at    DateTime
  updated_at    DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model verification_request {
  id         String   @id
  identifier String
  token      String   @unique
  created_at DateTime
  updated_at DateTime

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id                                                     String               @id(map: "user_pkey")
  name                                                   String
  first_page                                             Int                  @db.SmallInt
  enable_dashboard                                       Boolean              @default(false)
  is_dark_mode                                           Boolean              @default(false)
  created_at                                             DateTime
  updated_at                                             DateTime
  department                                             Department?          @default(management)
  role                                                   Role?                @default(maintainer)
  email                                                  String               @unique(map: "user_email_key")
  password                                               String
  email_verified                                         DateTime?
  image                                                  String?
  account                                                account[]
  asset_asset_created_byTouser                           asset[]              @relation("asset_created_byTouser")
  asset_asset_person_in_chargeTouser                     asset[]              @relation("asset_person_in_chargeTouser")
  asset_asset_updated_byTouser                           asset[]              @relation("asset_updated_byTouser")
  asset_tags_library_asset_tags_library_created_byTouser asset_tags_library[] @relation("asset_tags_library_created_byTouser")
  asset_tags_library_asset_tags_library_updated_byTouser asset_tags_library[] @relation("asset_tags_library_updated_byTouser")
  asset_type_asset_type_created_byTouser                 asset_type[]         @relation("asset_type_created_byTouser")
  asset_type_asset_type_updated_byTouser                 asset_type[]         @relation("asset_type_updated_byTouser")
  checklist_checklist_created_byTouser                   checklist[]          @relation("checklist_created_byTouser")
  checklist_checklist_updated_byTouser                   checklist[]          @relation("checklist_updated_byTouser")
  checklist_library_checklist_library_created_byTouser   checklist_library[]  @relation("checklist_library_created_byTouser")
  checklist_library_checklist_library_updated_byTouser   checklist_library[]  @relation("checklist_library_updated_byTouser")
  checklist_use_checklist_use_created_byTouser           checklist_use[]      @relation("checklist_use_created_byTouser")
  checklist_use_checklist_use_updated_byTouser           checklist_use[]      @relation("checklist_use_updated_byTouser")
  history                                                history[]
  session                                                session[]
  subtask_library_subtask_library_created_byTouser       subtask_library[]    @relation("subtask_library_created_byTouser")
  subtask_library_subtask_library_updated_byTouser       subtask_library[]    @relation("subtask_library_updated_byTouser")
  task_library_task_library_created_byTouser             task_library[]       @relation("task_library_created_byTouser")
  task_library_task_library_updated_byTouser             task_library[]       @relation("task_library_updated_byTouser")

  @@schema("public")
}

enum Department {
  management
  exploration

  @@schema("public")
}

enum Role {
  admin
  supervisor
  maintainer

  @@schema("public")
}

enum TaskType {
  choice
  selectOne
  check
  number
  selectMultiple

  @@schema("public")
}
